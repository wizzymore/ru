[package]
name = "ru"
version = "0.1.4"
edition = "2024"
authors = ["Cristian Bilu <cristian@eptic.ro>"]
homepage = "https://eptic.ro/ru"
repository = "https://github.com/wizzymore/ru"
license = "MIT"
keywords = ["du", "filesystem", "cli"]
categories = ["command-line-utilities"]
exclude = [".github", "Makefile"]
description = "A simple and easy-to-use cli tool inspired by du to find out the disk usage of files/directories."

[dependencies]
clap = { version = "4.5.38", features = ["derive", "cargo"] }
humansize = "2"
ignore = "0.4.23"
rayon = "1.10.0"

[target.'cfg(windows)'.dependencies]
windows-sys = { version = "0.60.2", features = [
    "Win32_Storage_FileSystem",
    "Win32_Foundation",
] }

# We use `opt-level = "s"` as it significantly reduces binary size.
# We could then use the `#[optimize(speed)]` attribute for spot optimizations.
# Unfortunately, that attribute currently doesn't work on intrinsics such as memset.
[profile.release]
lto = true      # reduces binary size
panic = "abort" # reduces binary size
split-debuginfo = "packed"  # generates a separate *.dwp/*.dSYM so the binary can get stripped
strip = "symbols"           # See split-debuginfo - allows us to drop the binary size
opt-level = "z" # reduces binary size to under 1MB
incremental = true          # Improves re-compile times

# Enable a small amount of optimization in the dev profile.
[profile.dev]
opt-level = 1
